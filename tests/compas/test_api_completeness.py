import json
import os
import pytest
import shutil
import subprocess
import compas


@pytest.fixture
def compas_api():
    with open(compas_api_filename(), 'r') as f:
        return json.load(f)


def compas_api_filename():
    if compas.IPY:
        filename = 'compas_api_ipy.json'
    else:
        filename = 'compas_api.json'
    return os.path.join(os.path.dirname(__file__), filename)


@pytest.fixture
def compas_stubs():
    env = compas._os.prepare_environment()

    HERE = os.path.dirname(__file__)
    HOME = os.path.abspath(os.path.join(HERE, '../..'))
    TEMP = os.path.join(HOME, 'temp/stubs')
    DOCS = os.path.join(HOME, 'docs')

    shutil.rmtree(TEMP, ignore_errors=True)

    commands = [
        'sphinx-autogen {}/api/compas.**.rst -o {}'.format(DOCS, TEMP)
    ]
    subprocess.call(';'.join(commands), shell=True, env=env)

    _, _, filenames = next(os.walk(TEMP))

    shutil.rmtree(TEMP, ignore_errors=True)

    stubs = {}
    for name in filenames:
        parts = name.split('.')
        if len(parts) != 4:
            continue
        package = parts[0]
        module = parts[1]
        item = parts[2]
        if package == 'compas':
            packmod = "{}.{}".format(package, module)
            if packmod not in stubs:
                stubs[packmod] = []
            stubs[packmod].append(item)

    return stubs


def test_compas_api_stubs(compas_api, compas_stubs):
    for packmod in compas_api['modules']:
        parts = packmod.split('.')
        if len(parts) != 2:
            continue
        assert packmod in compas_stubs
        for name in compas_api['modules'][packmod]:
            if name in ['BaseMesh', 'BaseNetwork', 'BaseVolMesh', 'Datastructure', 'Graph', 'HalfEdge', 'HalfFace']:
                continue
            if parts[1] == 'plugins':
                continue
            if parts[1] == 'utilities':
                continue
            assert name in compas_stubs[packmod]


# ==============================================================================
# Main
# ==============================================================================

if __name__ == '__main__':
    # Make a list of all stub files generated by sphinx autosummary
    # Skip methods of classes
    # Check if all methods in the API dict are also in the list of stub files.

    env = compas._os.prepare_environment()

    HERE = os.path.dirname(__file__)
    HOME = os.path.abspath(os.path.join(HERE, '../..'))
    TEMP = os.path.join(HOME, 'temp/stubs')
    DOCS = os.path.join(HOME, 'docs')

    shutil.rmtree(TEMP, ignore_errors=True)

    commands = [
        'sphinx-autogen {}/api/compas.**.rst -o {}'.format(DOCS, TEMP)
    ]

    subprocess.call(';'.join(commands), shell=True, env=env)
