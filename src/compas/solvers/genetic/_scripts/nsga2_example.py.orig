from __future__ import print_function

import os
import math

from compas.solvers.genetic.algorithms.moga import moga_optimize
from compas.visualization.viewers.multi_objective_vis import MULTI_VIS


__author__     = ['Tomas Mendez Echenagucia <mtomas@ethz.ch>']
__copyright__  = 'Copyright 2016, Block Research Group - ETH Zurich'
__license__    = 'MIT License'
__email__      = 'mtomas@ethz.ch'


def zdt3_f1(X, a):
    fit = X[0]
    return fit


def zdt3_f2(X, a):
    n = len(X)
    totX = 0
    for i in range(1, n):
        totX  = totX + X[i]
    G = 1 + (9 / (n - 1)) * totX
    H = 1 - math.sqrt(X[0] / G) - ((X[0] / G) * math.sin(10 * math.pi * X[0]))
    fit = G * H
    return fit


fit_functions = [zdt3_f1, zdt3_f2]
fit_types = ['min', 'min']
num_var = 30
boundaries = [(0, 1)] * num_var
num_bin_dig  = [8] * num_var
output_path = 'out/'

if not os.path.exists(output_path):
    os.makedirs(output_path)

moga = moga_optimize(fit_functions,
                     fit_types,
                     num_var,
                     boundaries,
                     num_gen=100,
                     num_pop=50,
                     num_bin_dig=num_bin_dig,
                     output_path=output_path,
                     min_fit=0.001)

vis = MULTI_VIS()
vis.input_path = moga.output_path
filename = ''
for name in moga.fit_names:
    filename += name + '-'
filename += '.json'
vis.output_path = vis.input_path
vis.draw_objective_spaces(filename, number=False)
