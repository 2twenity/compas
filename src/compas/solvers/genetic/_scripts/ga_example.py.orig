from __future__ import print_function

import os

from compas.solvers.genetic.algorithms.ga import ga_optimize
from compas.visualization.viewers.ga_vis import GA_VIS


__author__     = ['Tomas Mendez Echenagucia <mtomas@ethz.ch>']
__copyright__  = 'Copyright 2016, Block Research Group - ETH Zurich'
__license__    = 'MIT License'
__email__      = 'mtomas@ethz.ch'


def foo(X):
    fit = sum(X)
    return fit


fit_function = foo
fit_type = 'min'
num_var = 100
boundaries = [(0, 1)] * num_var
num_bin_dig  = [8] * num_var
output_path = 'out/'

if not os.path.exists(output_path):
    os.makedirs(output_path)

ga = ga_optimize(fit_function,
                 fit_type,
                 num_var,
                 boundaries,
                 num_gen=5000,
                 num_pop=100,
                 num_elite=40,
                 num_bin_dig=num_bin_dig,
                 output_path=output_path,
                 min_fit=0.001)

print('best_individual_index', ga.best_individual_index)
print('best fit value', ga.current_pop['fit_value'][ga.best_individual_index])
print('best individual', ga.current_pop['scaled'][ga.best_individual_index])

vis = GA_VIS()
vis.input_path = ga.output_path
vis.draw_ga_evolution(make_pdf=False, show_plot=True)
